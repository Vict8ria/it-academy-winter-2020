"""
    Task Шоколадка.

    Определения:
    Шоколадка - прямоугольник, размером n×m (n, m - натуральные).
    Разлом - деление шоколадки на две части с натуральными размерами по прямой.
    Долька - элемент шоколадки размером 1х1. Очевидно шоколадка состоит из n*m
    долек.
    Кусок - элемент шоколадки произвольного (целочисленного размера).

    1. Определите, можно ли одним разломом отделить от шоколадки кусок
    площадью ровно k.
    2. Определите, можно ли отломить от шоколадки ровно k долек за некоторое
    количество разломов.
    3. Определите, можно ли отломить от шоколадки ровно k долек с помощью t
    разломов

    Описание решения поместите в docstring
"""

# 1. Определите, можно ли одним разломом отделить от шоколадки кусок площадью
# ровно k.

# определяем, что k входит в площадь шоколадки (k // n < m, k // m < n)
# определяем, что k входит в один разлом (not k % n, not k % m)
n = 3
m = 3
k = 4
t = 5

if (not k % n and k // n < m) or (not k % m and k // m < n):
    print("1. можно")
else:
    print("1. нельзя")


# 2. Определите, можно ли отломить от шоколадки ровно k долек за некоторое
# количество разломов.

# количество разломов не должно превышать n * m - 1
if k < n * m:
    print("2. можно")
else:
    print("2. нельзя")


# 3. Определите, можно ли отломить от шоколадки ровно k долек с помощью t
# разломов

"""
    1. количество разломов не должно превышать n * m - 1

    2. определяем, какое количество k точно входит в первый разлом
    для n(m) долек нужно сделать n(m) разломов
    т.е. если шоколадка размером 3 x 4 то в первый разлом может входить
    3, 6, 9 или 4, 8 долек
    12 уже не может входить по первому пункту

    3. если еще остались дольки после первого разлома, смотрим:
        a. находятся ли оставшиеся дольки в крайней полоске шоколадки
        (n или m части шоколадки)
        для n(m) долек нужно сделать n(m) разломов
        b. если нет - добавляем + 1 к разлому, чтобы отделить нужную дольку
        от ненужной
"""
breaks = []

# 1 (n * m - 1)
if k < n * m:
    # 2 (сколько k входит в первый разлом)
    if k // n and not k % n or k // m and not k % m:
        breaks = [k]

    # 3 (если есть дольки, которые не вошли в первый разлом)
    if k % m or k % n:
        # 3a. (если делится последняя часть шоколадки от деления на части)
        if (k // n) + 1 == n and (k // m) + 1 == m:
            breaks += [k]
        # 3b.
        else:
            breaks += [k + 1]

if t in breaks:
    print("3. можно")
else:
    print("3. нельзя")
